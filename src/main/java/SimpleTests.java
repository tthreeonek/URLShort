import service.UrlShortenerService;
import service.UserService;
import config.AppConfig;
import util.UrlValidator;
import model.ShortUrl;

import java.time.LocalDateTime;
import java.util.UUID;

public class SimpleTests {

    public static void main(String[] args) {
        System.out.println("üöÄ –ü–†–û–°–¢–´–ï –¢–ï–°–¢–´ URL SHORTENER\n");

        testUrlValidator();
        testUserService();
        testShortUrlModel();
        testUrlShortenerService();
        testIntegration();

        System.out.println("\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!");
    }

    public static void testUrlValidator() {
        System.out.println("\n=== –¢–ï–°–¢–´ URL VALIDATOR ===");

        // –¢–µ—Å—Ç 1: –í–∞–ª–∏–¥–Ω—ã–π HTTP URL
        if (UrlValidator.isValidUrl("http://example.com")) {
            System.out.println("‚úÖ testValidUrl_Http - PASSED");
        } else {
            System.out.println("‚ùå testValidUrl_Http - FAILED");
        }

        // –¢–µ—Å—Ç 2: –í–∞–ª–∏–¥–Ω—ã–π HTTPS URL
        if (UrlValidator.isValidUrl("https://google.com")) {
            System.out.println("‚úÖ testValidUrl_Https - PASSED");
        } else {
            System.out.println("‚ùå testValidUrl_Https - FAILED");
        }

        // –¢–µ—Å—Ç 3: –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π URL
        if (!UrlValidator.isValidUrl("not-a-url")) {
            System.out.println("‚úÖ testInvalidUrl - PASSED");
        } else {
            System.out.println("‚ùå testInvalidUrl - FAILED");
        }
    }

    public static void testUserService() {
        System.out.println("\n=== –¢–ï–°–¢–´ USER SERVICE ===");

        UserService userService = new UserService();

        // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        UUID user1 = userService.createUser();
        UUID user2 = userService.createUser();

        if (user1 != null && user2 != null && !user1.equals(user2)) {
            System.out.println("‚úÖ testCreateUser_UniqueIds - PASSED");
        } else {
            System.out.println("‚ùå testCreateUser_UniqueIds - FAILED");
        }

        // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (userService.getUser(user1) != null) {
            System.out.println("‚úÖ testGetUser_Exists - PASSED");
        } else {
            System.out.println("‚ùå testGetUser_Exists - FAILED");
        }
    }

    public static void testShortUrlModel() {
        System.out.println("\n=== –¢–ï–°–¢–´ SHORT URL MODEL ===");

        // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ ShortUrl
        ShortUrl shortUrl = new ShortUrl(
                "https://example.com",
                "TEST123",
                UUID.randomUUID(),
                5,
                LocalDateTime.now().plusHours(24)
        );

        if (shortUrl.getOriginalUrl().equals("https://example.com")) {
            System.out.println("‚úÖ testShortUrlCreation - PASSED");
        } else {
            System.out.println("‚ùå testShortUrlCreation - FAILED");
        }

        // –¢–µ—Å—Ç 2: –ü–æ–¥—Å—á–µ—Ç –∫–ª–∏–∫–æ–≤
        shortUrl.incrementClickCount();
        shortUrl.incrementClickCount();
        if (shortUrl.getClickCount() == 2) {
            System.out.println("‚úÖ testClickCounting - PASSED");
        } else {
            System.out.println("‚ùå testClickCounting - FAILED");
        }

        // –¢–µ—Å—Ç 3: –õ–∏–º–∏—Ç –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
        for (int i = 0; i < 5; i++) {
            shortUrl.incrementClickCount();
        }
        if (shortUrl.isClickLimitExceeded()) {
            System.out.println("‚úÖ testClickLimit - PASSED");
        } else {
            System.out.println("‚ùå testClickLimit - FAILED");
        }
    }

    public static void testUrlShortenerService() {
        System.out.println("\n=== –¢–ï–°–¢–´ URL SHORTENER SERVICE ===");

        try {
            UserService userService = new UserService();
            UUID userId = userService.createUser();
            AppConfig config = new AppConfig();
            UrlShortenerService service = new UrlShortenerService(userService, config);

            // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–æ—Ç–∫–æ–π —Å—Å—ã–ª–∫–∏
            String shortUrl = service.createShortUrl("https://www.google.com", userId);
            if (shortUrl != null && shortUrl.contains("http://localhost:")) {
                System.out.println("‚úÖ testCreateShortUrl - PASSED");
            } else {
                System.out.println("‚ùå testCreateShortUrl - FAILED");
            }

            // –¢–µ—Å—Ç 2: –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π URL
            try {
                service.createShortUrl("invalid-url", userId);
                System.out.println("‚ùå testInvalidUrl_Exception - FAILED");
            } catch (IllegalArgumentException e) {
                System.out.println("‚úÖ testInvalidUrl_Exception - PASSED");
            }

            // –¢–µ—Å—Ç 3: –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            UUID user2 = userService.createUser();
            String url1 = service.createShortUrl("https://example.com", userId);
            String url2 = service.createShortUrl("https://example.com", user2);

            if (!url1.equals(url2)) {
                System.out.println("‚úÖ testUniqueUrlsPerUser - PASSED");
            } else {
                System.out.println("‚ùå testUniqueUrlsPerUser - FAILED");
            }

        } catch (Exception e) {
            System.out.println("‚ùå Service tests FAILED: " + e.getMessage());
        }
    }

    public static void testIntegration() {
        System.out.println("\n=== –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–´–ï –¢–ï–°–¢–´ ===");

        try {
            UserService userService = new UserService();
            UUID user1 = userService.createUser();
            UUID user2 = userService.createUser();
            AppConfig config = new AppConfig();
            UrlShortenerService service = new UrlShortenerService(userService, config);

            // –¢–µ—Å—Ç 1: –õ–∏–º–∏—Ç –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ (–∏–∑ –¢–ó)
            String shortUrl = service.createShortUrlWithCustomLimit("https://google.com", user1, 2);
            String shortCode = shortUrl.substring(shortUrl.lastIndexOf("/") + 1);

            // –ü–µ—Ä–≤—ã–µ –¥–≤–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞
            service.redirect(shortCode);
            service.redirect(shortCode);

            // –¢—Ä–µ—Ç–∏–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
            try {
                service.redirect(shortCode);
                System.out.println("‚ùå testClickLimitBlocking - FAILED");
            } catch (RuntimeException e) {
                System.out.println("‚úÖ testClickLimitBlocking - PASSED");
            }

            // –¢–µ—Å—Ç 2: –ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞ –ø–æ UUID (–∏–∑ –¢–ó)
            String user1Url = service.createShortUrl("https://example.com", user1);
            String user1Code = user1Url.substring(user1Url.lastIndexOf("/") + 1);

            // user2 –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á—É–∂–æ–π —Å—Å—ã–ª–∫–∏
            try {
                service.getUrlStats(user1Code, user2);
                System.out.println("‚ùå testUserAccessControl - FAILED");
            } catch (RuntimeException e) {
                System.out.println("‚úÖ testUserAccessControl - PASSED");
            }

        } catch (Exception e) {
            System.out.println("‚ùå Integration tests FAILED: " + e.getMessage());
        }
    }
}